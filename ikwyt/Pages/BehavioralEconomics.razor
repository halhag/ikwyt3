@page "/BehavioralEconomics"

@using IKWYT.Data
@using Repository
@using Toolbelt.Blazor.HeadElement
@inject IQuizService QuizService

<Title>IKWYT - Behavioral Economics</Title>

<h1><span class="material-icons">attach_money</span>   Behavioral Economics</h1>
<br />
<p>Behavioral economics studies the effects of psychological, cognitive, emotional, cultural and social factors on the decisions of individuals and institutions and how those decisions vary from those implied by classical economic theory.  Most of these quizzes are based on the books by the best selling behavioral economist Dan Ariely.</p>

<br />
<h3>Money</h3>
<RadzenGrid @ref="gridMoney" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesMoney" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz" Width="20%">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" Width="20%" />
        <RadzenGridColumn TItem="QuizMetaData" Property="Description" Title="Description">
            <Template Context="data">
                @{
                    <span style="white-space:normal">@data.Description</span>
                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

<br />
<h3>Social Norms</h3>
<RadzenGrid @ref="gridSocialNorms" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesSocialNorms" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz" Width="20%">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" Width="20%" />
        <RadzenGridColumn TItem="QuizMetaData" Property="Description" Title="Description">
            <Template Context="data">
                @{
                    <span style="white-space:normal">@data.Description</span>
                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

<br />
<h3>Others</h3>
<RadzenGrid @ref="gridOthers" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesOthers" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz" Width="20%">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" Width="20%" />
        <RadzenGridColumn TItem="QuizMetaData" Property="Description" Title="Description">
            <Template Context="data">
                @{
                    <span style="white-space:normal">@data.Description</span>
                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>
<br />
<br />


@code {
    RadzenGrid<QuizMetaData> gridMoney, gridSocialNorms, gridOthers;
    private List<QuizMetaData> quizzesMoney, quizzesSocialNorms, quizzesOthers;

    protected override void OnInitialized()
    {
        var allQuizzes = QuizService.GetQuizMetaData();

        // Money
        quizzesMoney = new List<QuizMetaData>();
        quizzesMoney.Add(allQuizzes.Single(x => x.ExternalReference == "Altruism"));
        quizzesMoney.Add(allQuizzes.Single(x => x.ExternalReference == "Difficult Choices"));
        quizzesMoney.Add(allQuizzes.Single(x => x.ExternalReference == "Relative Values"));
        quizzesMoney.Add(allQuizzes.Single(x => x.ExternalReference == "Revards Bonuses"));

        // Social Norms
        quizzesSocialNorms = new List<QuizMetaData>();
        quizzesSocialNorms.Add(allQuizzes.Single(x => x.ExternalReference == "Social Norms"));
        quizzesSocialNorms.Add(allQuizzes.Single(x => x.ExternalReference == "Ordering Food Beverages"));
        quizzesSocialNorms.Add(allQuizzes.Single(x => x.ExternalReference == "Ordering Food Beverages II"));

        // Others
        quizzesOthers = new List<QuizMetaData>();
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Revenge"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Rewards Punishment Happiness"));
    }
}
