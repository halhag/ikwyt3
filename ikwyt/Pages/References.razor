@page "/references/quiz/{quiz}/score/{score}"

@using IKWYT.Data
@using Repository
@using Radzen
@using Radzen.Blazor
@using Toolbelt.Blazor.HeadElement

@inject IQuizService QuizService
@inject NavigationManager NavigationManager

<Title>IKWYT - @QuizModel.Title</Title>

<h1><span class="material-icons">assessment</span>End of @QuizModel.Title</h1>

<br />
<b>Your score:</b> @Score out of @QuizModel.Questions.Count
<br />
<b>Average score:</b> @AverageScore
<br />
<br />
<b>Want to learn more?</b>
@foreach (var reference in ReferenceList)
{
    <br />
    <a href="@reference.Url" target="_blank">@reference.Text</a>
}
<br />
<br />
<RadzenButton Text="More quizzes, please!" Click="@OnSubmit"></RadzenButton>
<br />
<br />
<RadzenButton Text="Share" Icon="facebook" Style="color: white; background-color: #3b5998;" Click="@OnShareWithFacebook" />
    <br />
    <br />



@code {
    [Parameter]
    public string Quiz { get; set; }
    [Parameter]
    public string Score { get; set; }

    public Repository.Quiz QuizModel { get; set; }
    public List<Reference> ReferenceList { get; set; }
    public string AverageScore { get; set; }

    protected override void OnInitialized()
    {
        Quiz = Quiz ?? "Oops, missing in action";
        QuizModel = QuizService.GetQuiz(Quiz);
        ReferenceList = QuizModel.References;
        var averageScore = QuizService.GetAverageScore(Quiz);
        AverageScore = averageScore.ToString("0.##");
    }

    public void OnShareWithFacebook()
    {
        var url = @"https://www.facebook.com/sharer/sharer.php?u=https://ikwyt3.azurewebsites.net/" + GetNavigationCategory() + @"&src=sdkpreparse";
        NavigationManager.NavigateTo(url);
    }

    public void OnSubmit()
    {
        NavigationManager.NavigateTo("/" + GetNavigationCategory());
    }

    private string GetNavigationCategory()
    {
        if (QuizModel.Category == "Psychology")
        {
            return "Psychology";
        }
        if (QuizModel.Category == "Sociology" || QuizModel.Category == "Demography")
        {
            return "DemographyAndSociology";
        }
        if (QuizModel.Category == "Behavioral Economics")
        {
            return "BehavioralEconomics";
        }
        if (QuizModel.Category == "Biology")
        {
            return "Biology";
        }
        if (QuizModel.Category == "Experimental Philosophy")
        {
            return "ExperimentalPhilosophy";
        }
        if (QuizModel.Category == "Mix")
        {
            return "Mix";
        }
        if (QuizModel.Category == "Warmup")
        {
            return "Warmup";
        }
        return "quizzes";
    }
}
