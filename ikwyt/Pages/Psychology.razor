@page "/psychology"

@using IKWYT.Data
@using Repository
@inject IQuizService QuizService

<h1><span class="material-icons">favorite</span>   Psychology</h1>
<br />
<p>Psychology is the scientific study of the mind and behavior, of why we do what we do.  When cheating, do we also deceive ourselves?  How many think they are above average?  Are there psychological differences between men and women?</p>

<br />
<h3>Assessments</h3>
<RadzenGrid @ref="gridAssessments" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesAssessments" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" />
    </Columns>
</RadzenGrid>
<br />
<h3>Groups and genders</h3>
<RadzenGrid @ref="gridGroupsAndGenders" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesGroupsAndGenders" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" />
    </Columns>
</RadzenGrid>
<br />
<h3>Dishonesty</h3>
<RadzenGrid @ref="gridDishonesty" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesDishonesty" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" />
    </Columns>
</RadzenGrid>
<br />
<h3>Others</h3>
<RadzenGrid @ref="gridOthers" AllowFiltering="false" AllowPaging="false" PageSize="12" AllowSorting="false" Data="@quizzesOthers" TItem="QuizMetaData">
    <Columns>
        <RadzenGridColumn TItem="QuizMetaData" Property="ExternalReference" Title="Quiz">
            <Template Context="data">
                @{ var name = "/quiz/" + @data.ExternalReference;
                    <NavLink href="@name">@data.Title</NavLink>
                }
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="QuizMetaData" Property="Difficulty" Title="Difficulty" />
    </Columns>
</RadzenGrid>



@code {
    RadzenGrid<QuizMetaData> gridAssessments, gridGroupsAndGenders, gridDishonesty, gridOthers;
    private List<QuizMetaData> quizzesAssessments, quizzesGroupsAndGenders, quizzesDishonesty, quizzesOthers;

    protected override void OnInitialized()
    {
        var allQuizzes = QuizService.GetQuizMetaData();

        // Assessments
        quizzesAssessments = new List<QuizMetaData>();
        quizzesAssessments.Add(allQuizzes.Single(x => x.ExternalReference == "Assessments"));
        quizzesAssessments.Add(allQuizzes.Single(x => x.ExternalReference == "Beauty Talent Status"));
        quizzesAssessments.Add(allQuizzes.Single(x => x.ExternalReference == "Self Deception"));

        // Groups and genders
        quizzesGroupsAndGenders = new List<QuizMetaData>();
        quizzesGroupsAndGenders.Add(allQuizzes.Single(x => x.ExternalReference == "Group pressure"));
        quizzesGroupsAndGenders.Add(allQuizzes.Single(x => x.ExternalReference == "Individuals vs Groups"));
        quizzesGroupsAndGenders.Add(allQuizzes.Single(x => x.ExternalReference == "Gender Differences"));
        quizzesGroupsAndGenders.Add(allQuizzes.Single(x => x.ExternalReference == "Gender Differences II"));

        // Dishonesty
        quizzesDishonesty = new List<QuizMetaData>();
        quizzesDishonesty.Add(allQuizzes.Single(x => x.ExternalReference == "Dishonesty"));
        quizzesDishonesty.Add(allQuizzes.Single(x => x.ExternalReference == "Dishonesty_ii"));
        quizzesDishonesty.Add(allQuizzes.Single(x => x.ExternalReference == "Dishonesty_iii"));

        // Others
        quizzesOthers = new List<QuizMetaData>();
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Coca Cola"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Famous Experiments"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Children and Animals"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Thinking"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "Obedience"));
        quizzesOthers.Add(allQuizzes.Single(x => x.ExternalReference == "School Life"));
    }
}
